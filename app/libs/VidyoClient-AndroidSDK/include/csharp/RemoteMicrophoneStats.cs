// DO NOT EDIT! This is an autogenerated file. All changes will be
// overwritten!

//	Copyright (c) 2016 Vidyo, Inc. All rights reserved.


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Collections;
using System.Runtime.InteropServices;

namespace VidyoClient
{
	public class RemoteMicrophoneStats{
		private IntPtr objPtr; // opaque VidyoRemoteMicrophoneStats reference.
		public IntPtr GetObjectPtr(){
			return objPtr;
		}
		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern uint VidyoRemoteMicrophoneStatsGetbitsPerSampleNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern uint VidyoRemoteMicrophoneStatsGetcodecDtxNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoRemoteMicrophoneStatsGetcodecNameNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern uint VidyoRemoteMicrophoneStatsGetcodecQualitySettingNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoRemoteMicrophoneStatsGetidNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern int VidyoRemoteMicrophoneStatsGetlastFrameMsNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoRemoteMicrophoneStatsGetlocalSpeakerStreamsNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoRemoteMicrophoneStatsGetlocalSpeakerStreamsArrayNative(IntPtr obj, ref int size);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern void VidyoRemoteMicrophoneStatsFreelocalSpeakerStreamsArrayNative(IntPtr obj, int size);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoRemoteMicrophoneStatsGetnameNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern uint VidyoRemoteMicrophoneStatsGetnumberOfChannelsNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern ulong VidyoRemoteMicrophoneStatsGetreceiveNetworkBitRateNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern ulong VidyoRemoteMicrophoneStatsGetreceiveNetworkDelayNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern ulong VidyoRemoteMicrophoneStatsGetreceiveNetworkDroppedPacketsNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern uint VidyoRemoteMicrophoneStatsGetreceiveNetworkJitterNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern ulong VidyoRemoteMicrophoneStatsGetreceiveNetworkPacketsConcealedNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern ulong VidyoRemoteMicrophoneStatsGetreceiveNetworkPacketsLostNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern uint VidyoRemoteMicrophoneStatsGetsampleRateMeasuredNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern uint VidyoRemoteMicrophoneStatsGetsampleRateSetNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		public static extern IntPtr VidyoRemoteMicrophoneStatsGetUserDataNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		public static extern void VidyoRemoteMicrophoneStatsSetUserDataNative(IntPtr obj, IntPtr userData);

		public uint bitsPerSample;
		public uint codecDtx;
		public String codecName;
		public uint codecQualitySetting;
		public String id;
		public int lastFrameMs;
		public List<LocalSpeakerStreamStats> localSpeakerStreams;
		public String name;
		public uint numberOfChannels;
		public ulong receiveNetworkBitRate;
		public ulong receiveNetworkDelay;
		public ulong receiveNetworkDroppedPackets;
		public uint receiveNetworkJitter;
		public ulong receiveNetworkPacketsConcealed;
		public ulong receiveNetworkPacketsLost;
		public uint sampleRateMeasured;
		public uint sampleRateSet;
		public RemoteMicrophoneStats(IntPtr obj){
			objPtr = obj;

			List<LocalSpeakerStreamStats> csLocalSpeakerStreams = new List<LocalSpeakerStreamStats>();
			int nLocalSpeakerStreamsSize = 0;
			IntPtr nLocalSpeakerStreams = VidyoRemoteMicrophoneStatsGetlocalSpeakerStreamsArrayNative(VidyoRemoteMicrophoneStatsGetlocalSpeakerStreamsNative(objPtr), ref nLocalSpeakerStreamsSize);
			int nLocalSpeakerStreamsIndex = 0;
			while (nLocalSpeakerStreamsIndex < nLocalSpeakerStreamsSize) {
				LocalSpeakerStreamStats csTlocalSpeakerStreams = new LocalSpeakerStreamStats(Marshal.ReadIntPtr(nLocalSpeakerStreams + (nLocalSpeakerStreamsIndex * Marshal.SizeOf(nLocalSpeakerStreams))));
				csLocalSpeakerStreams.Add(csTlocalSpeakerStreams);
				nLocalSpeakerStreamsIndex++;
			}

			bitsPerSample = VidyoRemoteMicrophoneStatsGetbitsPerSampleNative(objPtr);
			codecDtx = VidyoRemoteMicrophoneStatsGetcodecDtxNative(objPtr);
			codecName = Marshal.PtrToStringAnsi(VidyoRemoteMicrophoneStatsGetcodecNameNative(objPtr));
			codecQualitySetting = VidyoRemoteMicrophoneStatsGetcodecQualitySettingNative(objPtr);
			id = Marshal.PtrToStringAnsi(VidyoRemoteMicrophoneStatsGetidNative(objPtr));
			lastFrameMs = VidyoRemoteMicrophoneStatsGetlastFrameMsNative(objPtr);
			localSpeakerStreams = csLocalSpeakerStreams;
			name = Marshal.PtrToStringAnsi(VidyoRemoteMicrophoneStatsGetnameNative(objPtr));
			numberOfChannels = VidyoRemoteMicrophoneStatsGetnumberOfChannelsNative(objPtr);
			receiveNetworkBitRate = VidyoRemoteMicrophoneStatsGetreceiveNetworkBitRateNative(objPtr);
			receiveNetworkDelay = VidyoRemoteMicrophoneStatsGetreceiveNetworkDelayNative(objPtr);
			receiveNetworkDroppedPackets = VidyoRemoteMicrophoneStatsGetreceiveNetworkDroppedPacketsNative(objPtr);
			receiveNetworkJitter = VidyoRemoteMicrophoneStatsGetreceiveNetworkJitterNative(objPtr);
			receiveNetworkPacketsConcealed = VidyoRemoteMicrophoneStatsGetreceiveNetworkPacketsConcealedNative(objPtr);
			receiveNetworkPacketsLost = VidyoRemoteMicrophoneStatsGetreceiveNetworkPacketsLostNative(objPtr);
			sampleRateMeasured = VidyoRemoteMicrophoneStatsGetsampleRateMeasuredNative(objPtr);
			sampleRateSet = VidyoRemoteMicrophoneStatsGetsampleRateSetNative(objPtr);
			VidyoRemoteMicrophoneStatsFreelocalSpeakerStreamsArrayNative(nLocalSpeakerStreams, nLocalSpeakerStreamsSize);
		}
	};
}
