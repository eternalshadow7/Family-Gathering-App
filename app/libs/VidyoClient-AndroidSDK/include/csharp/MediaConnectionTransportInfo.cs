// DO NOT EDIT! This is an autogenerated file. All changes will be
// overwritten!

//	Copyright (c) 2016 Vidyo, Inc. All rights reserved.


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Collections;
using System.Runtime.InteropServices;

namespace VidyoClient
{
	public class MediaConnectionTransportInfo{
		private IntPtr objPtr; // opaque VidyoMediaConnectionTransportInfo reference.
		public IntPtr GetObjectPtr(){
			return objPtr;
		}
		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoMediaConnectionTransportInfoGetaddressTypeNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoMediaConnectionTransportInfoGetcomponentTypeNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern uint VidyoMediaConnectionTransportInfoGetconnectionIdNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoMediaConnectionTransportInfoGetconnectionTypeNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoMediaConnectionTransportInfoGetexternalLocalAddrNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoMediaConnectionTransportInfoGetexternalRemoteAddrNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoMediaConnectionTransportInfoGetinterfaceNameNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoMediaConnectionTransportInfoGetinterfaceTypeNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoMediaConnectionTransportInfoGetinternalLocalAddrNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoMediaConnectionTransportInfoGetinternalRemoteAddrNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoMediaConnectionTransportInfoGettransportPlugInNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		public static extern IntPtr VidyoMediaConnectionTransportInfoGetUserDataNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		public static extern void VidyoMediaConnectionTransportInfoSetUserDataNative(IntPtr obj, IntPtr userData);

		public String addressType;
		public String componentType;
		public uint connectionId;
		public String connectionType;
		public String externalLocalAddr;
		public String externalRemoteAddr;
		public String interfaceName;
		public String interfaceType;
		public String internalLocalAddr;
		public String internalRemoteAddr;
		public String transportPlugIn;
		public MediaConnectionTransportInfo(IntPtr obj){
			objPtr = obj;

			addressType = Marshal.PtrToStringAnsi(VidyoMediaConnectionTransportInfoGetaddressTypeNative(objPtr));
			componentType = Marshal.PtrToStringAnsi(VidyoMediaConnectionTransportInfoGetcomponentTypeNative(objPtr));
			connectionId = VidyoMediaConnectionTransportInfoGetconnectionIdNative(objPtr);
			connectionType = Marshal.PtrToStringAnsi(VidyoMediaConnectionTransportInfoGetconnectionTypeNative(objPtr));
			externalLocalAddr = Marshal.PtrToStringAnsi(VidyoMediaConnectionTransportInfoGetexternalLocalAddrNative(objPtr));
			externalRemoteAddr = Marshal.PtrToStringAnsi(VidyoMediaConnectionTransportInfoGetexternalRemoteAddrNative(objPtr));
			interfaceName = Marshal.PtrToStringAnsi(VidyoMediaConnectionTransportInfoGetinterfaceNameNative(objPtr));
			interfaceType = Marshal.PtrToStringAnsi(VidyoMediaConnectionTransportInfoGetinterfaceTypeNative(objPtr));
			internalLocalAddr = Marshal.PtrToStringAnsi(VidyoMediaConnectionTransportInfoGetinternalLocalAddrNative(objPtr));
			internalRemoteAddr = Marshal.PtrToStringAnsi(VidyoMediaConnectionTransportInfoGetinternalRemoteAddrNative(objPtr));
			transportPlugIn = Marshal.PtrToStringAnsi(VidyoMediaConnectionTransportInfoGettransportPlugInNative(objPtr));
		}
	};
}
