// DO NOT EDIT! This is an autogenerated file. All changes will be
// overwritten!

//	Copyright (c) 2016 Vidyo, Inc. All rights reserved.


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Collections;
using System.Runtime.InteropServices;

namespace VidyoClient
{
	public class LocalRenderer{
		private IntPtr objPtr; // opaque VidyoLocalRenderer reference.
		public IntPtr GetObjectPtr(){
			return objPtr;
		}
		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoLocalRendererConstructCopyNative(IntPtr other);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern void VidyoLocalRendererDestructNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoLocalRendererGetIdNative(IntPtr r);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern IntPtr VidyoLocalRendererGetNameNative(IntPtr r);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern Boolean VidyoLocalRendererIsPausedNative(IntPtr r);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern void VidyoLocalRendererPauseNative(IntPtr r);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern void VidyoLocalRendererResumeNative(IntPtr r);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern Boolean VidyoLocalRendererSetMaxStreamsNative(IntPtr r, uint numStreams);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		private static extern Boolean VidyoLocalRendererSetPositionNative(IntPtr r, int x, int y, uint width, uint height);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		public static extern IntPtr VidyoLocalRendererGetUserDataNative(IntPtr obj);

		[DllImport("libVidyoClient", CallingConvention = CallingConvention.Cdecl)]
		public static extern void VidyoLocalRendererSetUserDataNative(IntPtr obj, IntPtr userData);

		public enum LocalRendererViewStyle{
			LocalrendererviewstyleDefault,
			LocalrendererviewstyleTiles
		}
		public LocalRenderer(IntPtr other){
			objPtr = VidyoLocalRendererConstructCopyNative(other);
			VidyoLocalRendererSetUserDataNative(objPtr, GCHandle.ToIntPtr(GCHandle.Alloc(this, GCHandleType.Weak)));
		}
		~LocalRenderer(){
			if(objPtr != IntPtr.Zero){
				VidyoLocalRendererSetUserDataNative(objPtr, IntPtr.Zero);
				VidyoLocalRendererDestructNative(objPtr);
			}
		}
		public String GetId(){

			IntPtr ret = VidyoLocalRendererGetIdNative(objPtr);

			return Marshal.PtrToStringAnsi(ret);
		}
		public String GetName(){

			IntPtr ret = VidyoLocalRendererGetNameNative(objPtr);

			return Marshal.PtrToStringAnsi(ret);
		}
		public Boolean IsPaused(){

			Boolean ret = VidyoLocalRendererIsPausedNative(objPtr);

			return ret;
		}
		public void Pause(){

			VidyoLocalRendererPauseNative(objPtr);
		}
		public void Resume(){

			VidyoLocalRendererResumeNative(objPtr);
		}
		public Boolean SetMaxStreams(uint numStreams){

			Boolean ret = VidyoLocalRendererSetMaxStreamsNative(objPtr, numStreams);

			return ret;
		}
		public Boolean SetPosition(int x, int y, uint width, uint height){

			Boolean ret = VidyoLocalRendererSetPositionNative(objPtr, x, y, width, height);

			return ret;
		}
	};
}
